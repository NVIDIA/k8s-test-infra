# Copyright 2024 NVIDIA CORPORATION
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run this workflow on pull requests
name: image

on:
  push:
    branches:
      - "pull-request/[0-9]+"
      - main
      - release-*

jobs:
  gh-runner-image:
    runs-on: linux-amd64-cpu4
    steps:
      - uses: actions/checkout@v4
        name: Check out code
      - name: Calculate build vars
        id: vars
        run: |
          if [ "${{github.event_name == 'pull_request'}}" = "true" ]; then
            echo "IMAGE_PUSH=false" >> $GITHUB_ENV
            echo "IMAGE_OUTPUTS=type=docker,dest=/tmp/k8s-test-infra-image.tar" >> $GITHUB_ENV
            echo "IMAGE_PLATFORMS=linux/amd64" >> $GITHUB_ENV
          else
            echo "IMAGE_PUSH=true" >> $GITHUB_ENV
            echo "IMAGE_OUTPUTS=type=registry,push=true" >> $GITHUB_ENV
            echo "IMAGE_PLATFORMS=linux/amd64,linux/arm64" >> $GITHUB_ENV
          fi
          HOLODECK_VERSION=$(sed -n 's/.*holodeck:v\([0-9.]*\).*/\1/p' images/gh_runner/Dockerfile)
          RUNNER_VERSION=$(sed -n 's/.*actions-runner:\([0-9.]*\).*/\1/p' images/gh_runner/Dockerfile)
          echo "HOLODECK_VERSION=$HOLODECK_VERSION" >> $GITHUB_ENV
          echo "RUNNER_VERSION=$RUNNER_VERSION" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/nvidia/k8s-test-infra
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ env.IMAGE_PUSH }}
          context: .
          outputs: ${{ env.IMAGE_OUTPUTS }}
          platforms: ${{ env.IMAGE_PLATFORMS }}
          tags: ghcr.io/nvidia/k8s-test-infra:gh-runner-${{ env.HOLODECK_VERSION }}-${{ env.RUNNER_VERSION }}
          file: ./images/gh_runner/Dockerfile
  devel-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version:
        - "1.24"
        - "1.23"
        - "1.23.1"
        - "1.23.2"
        - "1.23.3"
        - "1.23.4"
        - "1.23.5"
        - "1.23.6"
        - "1.22"
        - "1.22.1"
        - "1.22.2"
        - "1.22.4"
        - "1.22.5"
        - "1.22.7"
        - "1.22.8"
        - "1.22.9"
        - "1.22.10"
        - "1.22.11"
        - "1.21"
        - "1.21.4"
        - "1.21.5"
        - "1.20"
        - "1.20.2"
        - "1.20.4"
        - "1.20.5"
        ispr:
        - ${{github.event_name == 'pull_request'}}
        include:
          - go-version: "1.22"
            controller-gen-version: "v0.17.1"
            client-gen-version: "v0.29.2"
          - go-version: "1.22.1"
            controller-gen-version: "v0.17.1"
            client-gen-version: "v0.29.2"
        exclude:
        - ispr: true
          go-version: "1.21.4"
        - ispr: true
          go-version: "1.21.5"
        - ispr: true
          go-version: "1.20.2"
        - ispr: true
          go-version: "1.20.4"
        - ispr: true
          go-version: "1.20.5"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Calculate build vars
        id: vars
        run: |
          if [ "${{ matrix.ispr }}" = "true" ]; then
            echo "IMAGE_PUSH=false" >> $GITHUB_ENV
            echo "IMAGE_OUTPUTS=type=docker,dest=/tmp/k8s-test-infra-image.tar" >> $GITHUB_ENV
            echo "IMAGE_PLATFORMS=linux/amd64" >> $GITHUB_ENV
          else
            echo "IMAGE_PUSH=true" >> $GITHUB_ENV
            echo "IMAGE_OUTPUTS=type=registry,push=true" >> $GITHUB_ENV
            echo "IMAGE_PLATFORMS=linux/amd64,linux/arm64" >> $GITHUB_ENV
          fi
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          push: ${{ env.IMAGE_PUSH }}
          context: .
          outputs: ${{ env.IMAGE_OUTPUTS }}
          file: ./images/devel/Dockerfile
          platforms: ${{ env.IMAGE_PLATFORMS }}
          build-args: |
            GOLANG_VERSION=${{ matrix.go-version }}
            CONTROLLER_GEN_VERSION=${{ matrix.controller-gen-version || 'v0.17.1' }}
            CLIENT_GEN_VERSION=${{ matrix.client-gen-version || 'v0.26.1' }}
          tags: ghcr.io/nvidia/k8s-test-infra:devel-go${{ matrix.go-version }}
